{"version":3,"sources":["components/weatherPage/Weather.js","App.js","reportWebVitals.js","index.js"],"names":["Weather","data","celcius","Math","round","parseFloat","main","temp","className","weather","description","name","src","icon","App","useState","city","setcity","setData","flag","setFlag","weatherHandler","a","fetch","then","res","json","placeholder","onChange","e","target","value","onClick","disabled","trim","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPAyBeA,EAvBC,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACXC,EAAUC,KAAKC,MAAMC,WAAWJ,EAAKK,KAAKC,MAAQ,QACtD,OACI,qBAAKC,UAAU,iBAAf,SACA,sBAAKA,UAAU,iBAAf,UAKI,sBAAKA,UAAU,iBAAf,UACI,qBAAKA,UAAU,OAAf,mBAA0BN,EAA1B,UACA,qBAAKM,UAAU,cAAf,SAA8BP,EAAKQ,QAAQ,GAAGC,cAC9C,qBAAKF,UAAU,SACf,qBAAKA,UAAU,WAAf,SAA2BP,EAAKU,UAEpC,qBAAKH,UAAU,mBAAf,SACA,qBAAKA,UAAU,QAAQI,IAAG,2CAAsCX,EAAKQ,QAAQ,GAAGI,KAAtD,qBC4BvBC,MA3Cf,WAAgB,IAAD,EAEWC,mBAAS,IAFpB,mBAENC,EAFM,KAEAC,EAFA,OAMUF,qBANV,mBAMNd,EANM,KAMDiB,EANC,OAOWH,oBAAS,GAPpB,mBAONI,EAPM,KAOAC,EAPA,KAgBPC,EAAc,uCAAG,sBAAAC,EAAA,sEAEfC,MAAM,qDAAD,OAC4CP,EAD5C,4CAGRQ,MAAK,SAAAC,GACJ,OAAOA,EAAIC,UAEZF,MAAK,SAAAvB,GACJiB,EAAQjB,GACRmB,GAAQ,MAVS,2CAAH,qDAapB,OACE,qBAAKZ,UAAU,MAAf,SACMW,EACF,qCACE,uBAAOX,UAAU,QAAQmB,YAAY,kBAAkBC,SAAU,SAAAC,GAAC,OAAIZ,EAAQY,EAAEC,OAAOC,UACvF,wBAAQvB,UAAU,MAAMwB,QAASX,EAAgBY,SAA0B,KAAdjB,EAAKkB,OAAlE,8BAEH,cAAC,EAAD,CAASjC,KAAMA,OC3BPkC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ca9402eb.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Weather = ({ data }) => {\r\n    var celcius = Math.round(parseFloat(data.main.temp) - 273.15);\r\n    return (\r\n        <div className=\"main-container\">\r\n        <div className='data-container'>\r\n            {/* <div className='temp'>{`${celcius}°`}</div>\r\n            <div className='description'>{data.weather[0].description}</div>\r\n            <img src={`http://openweathermap.org/img/wn/${data.weather[0].icon}@2x.png`} />\r\n            <div className='location'>{data.name}</div> */}\r\n            <div className='fist-container'>\r\n                <div className='temp'>{`${celcius}°`}</div>\r\n                <div className='description'>{data.weather[0].description}</div>\r\n                <div className=\"line\"></div>\r\n                <div className='location'>{data.name}</div>\r\n            </div>\r\n            <div className='second-container'>\r\n            <img className=\"image\" src={`http://openweathermap.org/img/wn/${data.weather[0].icon}@2x.png`} />\r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Weather;","import { useEffect, useState } from 'react';\nimport Weather from './components/weatherPage/Weather';\n\nfunction App() {\n\n  const [city, setcity] = useState('');\n  // const [temp, setTemp] = useState('');\n  // const [location, setLocation] = useState('');\n  // const [des, setDes] = useState('');\n  const [data,setData] = useState();\n  const [flag, setFlag] = useState(true);\n\n\n  // const drawWeather = (d) => {\n  //   var celcius = Math.round(parseFloat(d.main.temp) - 273.15);\n  //   setTemp(`${celcius} deg`);\n  //   setLocation(d.name);\n  //   setDes(d.weather[0].description);\n  // }\n  const weatherHandler = async () => {\n    \n    await fetch(\n      `https://api.openweathermap.org/data/2.5/weather?q=${city}&APPID=4e20ff0822954a77ab94b3fcb66528b2`\n    )\n      .then(res => {\n        return res.json();\n      })\n      .then(data => {\n        setData(data);\n        setFlag(false);\n      })\n  }\n  return (\n    <div className=\"App\">\n      {   flag? \n        <>\n          <input className=\"input\" placeholder=\"Enter City Name\" onChange={e => setcity(e.target.value)}></input>\n          <button className=\"btn\" onClick={weatherHandler} disabled = {city.trim()===''}>Check Weather</button>\n        </> :\n       <Weather data={data} />\n      }\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './main.scss'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}